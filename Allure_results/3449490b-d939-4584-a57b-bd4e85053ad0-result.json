{"name": "DemoQA Form Fill Test", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"gender-radio-1\" class=\"custom-control-label\">...</label> is not clickable at point (441, 499). Other element would receive the click: <div class=\"react-datepicker__week\">...</div>\n  (Session info: chrome=138.0.7204.50)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7c1f76f95+76917]\n\tGetHandleVerifier [0x0x7ff7c1f76ff0+77008]\n\t(No symbol) [0x0x7ff7c1d29dea]\n\t(No symbol) [0x0x7ff7c1d88269]\n\t(No symbol) [0x0x7ff7c1d85c02]\n\t(No symbol) [0x0x7ff7c1d82c41]\n\t(No symbol) [0x0x7ff7c1d81b31]\n\t(No symbol) [0x0x7ff7c1d73368]\n\t(No symbol) [0x0x7ff7c1da846a]\n\t(No symbol) [0x0x7ff7c1d72c16]\n\t(No symbol) [0x0x7ff7c1da8680]\n\t(No symbol) [0x0x7ff7c1dd065c]\n\t(No symbol) [0x0x7ff7c1da8243]\n\t(No symbol) [0x0x7ff7c1d71431]\n\t(No symbol) [0x0x7ff7c1d721c3]\n\tGetHandleVerifier [0x0x7ff7c224d2cd+3051437]\n\tGetHandleVerifier [0x0x7ff7c2247923+3028483]\n\tGetHandleVerifier [0x0x7ff7c22658bd+3151261]\n\tGetHandleVerifier [0x0x7ff7c1f9185e+185662]\n\tGetHandleVerifier [0x0x7ff7c1f9971f+218111]\n\tGetHandleVerifier [0x0x7ff7c1f7fb14+112628]\n\tGetHandleVerifier [0x0x7ff7c1f7fcc9+113065]\n\tGetHandleVerifier [0x0x7ff7c1f66c98+10616]\n\tBaseThreadInitThunk [0x0x7ff83b9553e0+16]\n\tRtlUserThreadStart [0x0x7ff83c6c485b+43]", "trace": "@allure.title(\"DemoQA Form Fill Test\")\n    @allure.description(\"Fill the basic information fields in the DemoQA automation practice form.\")\n    def test_demoqa_form():\n        driver = webdriver.Chrome()\n        driver.get(\"https://demoqa.com/automation-practice-form\")\n    \n        with allure.step(\"Fill First Name\"):\n            firstname = driver.find_element(By.XPATH, \"(//input[@type='text'])[1]\")\n            firstname.send_keys(\"Vimal\")\n            time.sleep(2)\n    \n        with allure.step(\"Fill Last Name\"):\n            driver.find_element(By.XPATH, \"(//input[@type='text'])[2]\").send_keys(\"raj\")\n            time.sleep(2)\n    \n        with allure.step(\"Fill Email\"):\n            driver.find_element(By.XPATH, \"(//input[@type='text'])[3]\").send_keys(\"sjfniouef@fowi.com\")\n    \n        with allure.step(\"Fill Mobile Number\"):\n            driver.find_element(By.XPATH, \"(//input[@type='text'])[4]\").send_keys(\"6494987\")\n    \n        with allure.step(\"Fill Date of Birth\"):\n            driver.find_element(By.XPATH, \"(//input[@type='text'])[5]\").send_keys(\"27 nov 2004\")\n    \n        with allure.step(\"Select Gender\"):\n>           driver.find_element(By.XPATH, \"//label[text()='Male']\").click()\n\ntest_Xpath_indexing.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webelement.py:121: in click\n    self._execute(Command.CLICK_ELEMENT)\n..\\..\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webelement.py:574: in _execute\n    return self._parent.execute(command, params)\n..\\..\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:447: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002CAB96C03A0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...ff7c1f66c98+10616]\\\\n\\\\tBaseThreadInitThunk [0x0x7ff83b9553e0+16]\\\\n\\\\tRtlUserThreadStart [0x0x7ff83c6c485b+43]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"gender-radio-1\" class=\"custom-control-label\">...</label> is not clickable at point (441, 499). Other element would receive the click: <div class=\"react-datepicker__week\">...</div>\nE         (Session info: chrome=138.0.7204.50)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff7c1f76f95+76917]\nE       \tGetHandleVerifier [0x0x7ff7c1f76ff0+77008]\nE       \t(No symbol) [0x0x7ff7c1d29dea]\nE       \t(No symbol) [0x0x7ff7c1d88269]\nE       \t(No symbol) [0x0x7ff7c1d85c02]\nE       \t(No symbol) [0x0x7ff7c1d82c41]\nE       \t(No symbol) [0x0x7ff7c1d81b31]\nE       \t(No symbol) [0x0x7ff7c1d73368]\nE       \t(No symbol) [0x0x7ff7c1da846a]\nE       \t(No symbol) [0x0x7ff7c1d72c16]\nE       \t(No symbol) [0x0x7ff7c1da8680]\nE       \t(No symbol) [0x0x7ff7c1dd065c]\nE       \t(No symbol) [0x0x7ff7c1da8243]\nE       \t(No symbol) [0x0x7ff7c1d71431]\nE       \t(No symbol) [0x0x7ff7c1d721c3]\nE       \tGetHandleVerifier [0x0x7ff7c224d2cd+3051437]\nE       \tGetHandleVerifier [0x0x7ff7c2247923+3028483]\nE       \tGetHandleVerifier [0x0x7ff7c22658bd+3151261]\nE       \tGetHandleVerifier [0x0x7ff7c1f9185e+185662]\nE       \tGetHandleVerifier [0x0x7ff7c1f9971f+218111]\nE       \tGetHandleVerifier [0x0x7ff7c1f7fb14+112628]\nE       \tGetHandleVerifier [0x0x7ff7c1f7fcc9+113065]\nE       \tGetHandleVerifier [0x0x7ff7c1f66c98+10616]\nE       \tBaseThreadInitThunk [0x0x7ff83b9553e0+16]\nE       \tRtlUserThreadStart [0x0x7ff83c6c485b+43]\n\n..\\..\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "Fill the basic information fields in the DemoQA automation practice form.", "steps": [{"name": "Fill First Name", "status": "passed", "start": 1751620943402, "stop": 1751620945472}, {"name": "Fill Last Name", "status": "passed", "start": 1751620945472, "stop": 1751620947541}, {"name": "Fill Email", "status": "passed", "start": 1751620947541, "stop": 1751620947594}, {"name": "Fill Mobile Number", "status": "passed", "start": 1751620947594, "stop": 1751620947636}, {"name": "Fill Date of Birth", "status": "passed", "start": 1751620947636, "stop": 1751620947779}, {"name": "Select Gender", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <label title=\"\" for=\"gender-radio-1\" class=\"custom-control-label\">...</label> is not clickable at point (441, 499). Other element would receive the click: <div class=\"react-datepicker__week\">...</div>\n  (Session info: chrome=138.0.7204.50)\nStacktrace:\n\tGetHandleVerifier [0x0x7ff7c1f76f95+76917]\n\tGetHandleVerifier [0x0x7ff7c1f76ff0+77008]\n\t(No symbol) [0x0x7ff7c1d29dea]\n\t(No symbol) [0x0x7ff7c1d88269]\n\t(No symbol) [0x0x7ff7c1d85c02]\n\t(No symbol) [0x0x7ff7c1d82c41]\n\t(No symbol) [0x0x7ff7c1d81b31]\n\t(No symbol) [0x0x7ff7c1d73368]\n\t(No symbol) [0x0x7ff7c1da846a]\n\t(No symbol) [0x0x7ff7c1d72c16]\n\t(No symbol) [0x0x7ff7c1da8680]\n\t(No symbol) [0x0x7ff7c1dd065c]\n\t(No symbol) [0x0x7ff7c1da8243]\n\t(No symbol) [0x0x7ff7c1d71431]\n\t(No symbol) [0x0x7ff7c1d721c3]\n\tGetHandleVerifier [0x0x7ff7c224d2cd+3051437]\n\tGetHandleVerifier [0x0x7ff7c2247923+3028483]\n\tGetHandleVerifier [0x0x7ff7c22658bd+3151261]\n\tGetHandleVerifier [0x0x7ff7c1f9185e+185662]\n\tGetHandleVerifier [0x0x7ff7c1f9971f+218111]\n\tGetHandleVerifier [0x0x7ff7c1f7fb14+112628]\n\tGetHandleVerifier [0x0x7ff7c1f7fcc9+113065]\n\tGetHandleVerifier [0x0x7ff7c1f66c98+10616]\n\tBaseThreadInitThunk [0x0x7ff83b9553e0+16]\n\tRtlUserThreadStart [0x0x7ff83c6c485b+43]\n\n", "trace": "  File \"C:\\Users\\Administrator\\Desktop\\allure_folder\\test_Xpath_indexing.py\", line 32, in test_demoqa_form\n    driver.find_element(By.XPATH, \"//label[text()='Male']\").click()\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 121, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 574, in _execute\n    return self._parent.execute(command, params)\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 447, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\Users\\Administrator\\AppData\\Roaming\\Python\\Python310\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1751620947779, "stop": 1751620948844}], "start": 1751620936434, "stop": 1751620948847, "uuid": "383f98c1-710a-49bb-9392-2d72ba9f6d9e", "historyId": "fcb4a9e82d782b2bc78b03daf261b38e", "testCaseId": "fcb4a9e82d782b2bc78b03daf261b38e", "fullName": "test_Xpath_indexing#test_demoqa_form", "labels": [{"name": "suite", "value": "test_Xpath_indexing"}, {"name": "host", "value": "YOHA-26"}, {"name": "thread", "value": "32932-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Xpath_indexing"}]}